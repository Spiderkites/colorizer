
@function breakpoint-infix-jtl($name, $breakpoints: $grid-breakpoints) {
	@return if(breakpoint-min($name, $breakpoints) == null, '', #{$name}-);
}

@function rem($pixels, $default: 16px) {
	@if (unitless($pixels)) {
		$pixels: $pixels * 1px;
	}
	@if (unitless($default)) {
		$default: $default * 1px;
	}
	@return $pixels / $default * 1rem;
}

@function pow($number, $exp) {
	$value: 1;

	@if $exp > 0 {
		@for $i from 1 through $exp {
			$value: $value * $number;
		}
	}
	@else if $exp < 0 {
		@for $i from 1 through -$exp {
			$value: $value / $number;
		}
	}

	@return $value;
}

@function fact($number) {
	$value: 1;

	@if $number > 0 {
		@for $i from 1 through $number {
			$value: $value * $i;
		}
	}

	@return $value;
}

@function pi() {
	@return 3.14159265359;
}

@function rad($angle) {
	$unit: unit($angle);
	$unitless: $angle / ($angle * 0 + 1);

	@if $unit == deg {
		$unitless: $unitless / 180 * pi();
	}

	@return $unitless;
}

@function sin($angle) {
	$sin: 0;
	$angle: rad($angle);

	@for $i from 0 through 10 {
		$sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
	}

	@return $sin;
}

@function cos($angle) {
	$cos: 0;
	$angle: rad($angle);

	@for $i from 0 through 10 {
		$cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
	}

	@return $cos;
}

@function tan($angle) {
	@return sin($angle) / cos($angle);
}

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@function header-height($breakpoint) {
	@if $breakpoint == lg {
		@return $navbar-image-height-lg + 2 * $navbar-padding-y-lg;
	}
	@return $navbar-image-height + 2 * $navbar-padding-y;
}
